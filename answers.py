import sys
sys.path.insert(0, '../WebServer/')
from layout import users, lvls, dbase
import json
import random
import requests
from speech import speech_it
from local_module import *

translate_token = 'trnsl.1.1.20180822T035034Z.c4e6b0734a1501db.3c10535039452db4d70963681df09234674e4b33'
all_lang = ['az', 'sq', 'am', 'en', 'ar', 'hy', 'af', 'eu', 'ba', 'be', 'bn', 'my',
            'bg', 'bs', 'cy', 'hu', 'vi', 'ht', 'gl', 'nl', 'mrj', 'el', 'ka', 'gu',
            'da', 'he', 'yi', 'id', 'ga', 'it', 'is', 'es', 'kk', 'kn', 'ca', 'ky',
            'zh', 'ko', 'xh', 'km', 'lo', 'la', 'lv', 'lt', 'lb', 'mg', 'ms', 'ml',
            'mt', 'mk', 'mi', 'mr', 'mhr', 'mn', 'de', 'ne', 'no', 'pa', 'pap', 'fa',
            'pl', 'pt', 'ro', 'ru', 'ceb', 'sr', 'si', 'sk', 'sl', 'sw', 'su', 'tg',
            'th', 'tl', 'ta', 'tt', 'te', 'tr', 'udm', 'uz', 'uk', 'ur', 'fi', 'fr',
            'hi', 'hr', 'cs', 'sv', 'gd', 'et', 'eo', 'jv', 'ja']

class Answers:
    def __init__(self):
        pass

    def get_answer(self, body, message):
        user_id = message.from_user.id
        self.user = users.get_by_tele(user_id)
        file = open('../WebServer/databases/player/set_' + str(self.user[0]) + '.json', mode='r')
        self.data = file.read()
        self.data = json.loads(self.data)
        file.close()
        self.status = self.user[7]
        if body.lower() == 'id':
            return 'Telegram: ' + str(self.user[6]) + '\nIn game: ' + str(self.user[0])

        elif body.lower() == '–ø—Ä–æ—Ñ–∏–ª—å':
            user = users.get_by_tele(message.from_user.id)

            return 'üÜî: '+str(self.user[0])+'\n'+\
                   '‚ù§Ô∏è–ñ–∏–∑–Ω–∏: '+str(self.data['player']['max_health'])+\
                   '\n‚ù£Ô∏è–†–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è: '+str(self.data['player']['regen']) + \
                   '\nüí™üèª–°–∏–ª–∞: ' + str(self.data['player']['power'])+\
                   '\nüí∞–î–µ–Ω—å–≥–∏: '+str(self.split_it(self.data['player']['money']))+'$'+\
                   '\n‚≠ê–°—Ç–∞—Ç—É—Å: ' + self.status

        elif body.lower().split()[0] == '–∫–∞–∑–∏–Ω–æ':
            body = body.lower().split()
            money = self.data['player']['money']
            bet = body[1]
            if bet == '–≤—Å–µ' or bet == '–≤—Å—ë':
                bet = int(money)
            elif bet.isdigit() is False:
                return None
            bet = int(bet)
            if bet > money:
                bet = int(money)
            money -= int(bet)
            mult = random.random()
            if bet < 0:
                return '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞ 1$'
            if mult < 0.05:
                b = 0
                bet *= 0

            elif mult < 0.15:
                b = 0.25
                bet *= 0.25

            elif mult < 0.25:
                b = 0.5
                bet *= 0.5

            elif mult < 0.5:
                b = 0.75
                bet *= 0.75

            elif mult < 0.65:
                b = 1.5
                bet*= 1.5

            elif mult < 0.8:
                b = 2
                bet *= 2

            elif mult < 0.9:
                b = 5
                bet*=5

            elif mult <= 1 and mult > 0.95:
                b = 100
                bet *= 100
            else:
                b = random.choice((0.5,1,2))
            money += bet
            self.data['player']['money'] = money
            return '–¢–µ–±–µ –ø–æ–ø–∞–ª–æ—Å—å —Ö'+str(b)+'\nüíµ–î–µ–Ω–µ–≥: '+str(self.split_it(int(money)))+'$'

        elif body.lower() == '–±–∞–ª–∞–Ω—Å':
            return 'üíµ–ù–∞ —Å—á–µ—Ç–µ: '+str(self.split_it(self.data['player']['money']))+'$'

        elif body.lower() == '–ø–æ–º–æ—â—å':
            return 'üôéüèª‚Äç‚ôÇÔ∏èÔ∏è–ü—Ä–æ—Ñ–∏–ª—å\nüí∏–ë–∞–ª–∞–Ω—Å\nüé∞–ö–∞–∑–∏–Ω–æ\nüè¥Û†ÅßÛ†Å¢Û†Å•Û†ÅÆÛ†ÅßÛ†Åø–ü–µ—Ä–µ–≤–µ–¥–∏ <—Å> <–Ω–∞> <—Ç–µ–∫—Å—Ç>\nüñä–ì—Ä–∞—Ñ <—Å–ø–∏—Å–æ–∫>/—Ä–∞–Ω–¥–æ–º\nüé§–°–∫–∞–∂–∏ <—Å–ª–æ–≤–∞>\n\nVersion 0.05'

        elif body.lower().split()[0] == '—É–ª—É—á—à–∏—Ç—å':
            if body.lower().split()[1] == '—Å–µ–±—è':
                if self.data['player']['money'] >= self.data['player']['upgrade_cost']:
                    self.data['player']['money'] -= self.data['player']['upgrade_cost']
                    self.data['player']['power'] = int(round((self.data['player']['power']+1)*1.03,0))
                    self.data['player']['upgrade_cost'] = int(round(((self.data['player']['upgrade_cost']) * 1.06), 0))
                    self.data['player']['max_health'] = int(round(((self.data['player']['max_health'])*1.04),0))
                    self.data['player']['regen'] = round((self.data['player']['regen']+1) * 1.04, 5)
                    return '–ì–æ—Ç–æ–≤–æ. –¢–µ–ø–µ—Ä—å: \n‚ù§Ô∏è–ñ–∏–∑–Ω–∏: '+str(self.data['player']['max_health'])+'\n‚ù£Ô∏è–†–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è: '+str(self.data['player']['regen']) + '\nüí™üèª–°–∏–ª–∞: ' + str(self.data['player']['power'])+'\nüí∞–î–µ–Ω—å–≥–∏: '+str(self.split_it(self.data['player']['money']))+'$'
                return '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥'
            return '–ü–æ–∫–∞ –Ω–µ–ª—å–∑—è —ç—Ç–æ —É–ª—É—á—à–∞—Ç—å'

        elif body.lower().split()[:1] == ['–ø–µ—Ä–µ–≤–µ–¥–∏']:

            eng_text = body.split()[1:]
            langs = [eng_text[0], eng_text[1]]
            eng_text = body.split()[3:]

            eng_text = ' '.join(eng_text)
            if langs[0] in all_lang and langs[1] in all_lang:
                url_trans = 'https://translate.yandex.net/api/v1.5/tr.json/translate'
                trans_option = {'key': translate_token, 'lang': langs[0] + "-" + langs[1], 'text': eng_text}
                # trans_option = {'key': token, 'lang': "en-ru", 'text': eng_text}
                webRequest = requests.get(url_trans, params=trans_option)
                rus_text = webRequest.text
                srez = 32 + len(langs[0]) + len(langs[1])
                rus_text = rus_text[srez:(len(rus_text) - 3)]

                return rus_text + '\n\n–ü–µ—Ä–µ–≤–µ–¥–µ–Ω–æ —Å–µ—Ä–≤–∏—Å–æ–º ¬´–Ø–Ω–¥–µ–∫—Å.–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫¬ª\nhttp://translate.yandex.ru/'

        elif body.lower() == '—è–∑—ã–∫–∏':
            return '''–∞–∑–µ—Ä–±–∞–π–¥–∂–∞–Ω—Å–∫–∏–π	az	\n–º–∞–ª–∞—è–ª–∞–º	ml\n\
                    –∞–ª–±–∞–Ω—Å–∫–∏–π	sq	\n–º–∞–ª—å—Ç–∏–π—Å–∫–∏–π	mt\n\
                    –∞–º—Ö–∞—Ä—Å–∫–∏–π	am	\n–º–∞–∫–µ–¥–æ–Ω—Å–∫–∏–π	mk\n\
                    –∞–Ω–≥–ª–∏–π—Å–∫–∏–π	en	\n–º–∞–æ—Ä–∏	mi\n\
                    –∞—Ä–∞–±—Å–∫–∏–π	ar	\n–º–∞—Ä–∞—Ç—Ö–∏	mr\n\
                    –∞—Ä–º—è–Ω—Å–∫–∏–π	hy	\n–º–∞—Ä–∏–π—Å–∫–∏–π	mhr\n\
                    –∞—Ñ—Ä–∏–∫–∞–∞–Ω—Å	af	\n–º–æ–Ω–≥–æ–ª—å—Å–∫–∏–π	mn\n\
                    –±–∞—Å–∫—Å–∫–∏–π	eu	\n–Ω–µ–º–µ—Ü–∫–∏–π	de\n\
                    –±–∞—à–∫–∏—Ä—Å–∫–∏–π	ba	\n–Ω–µ–ø–∞–ª—å—Å–∫–∏–π	ne\n\
                    –±–µ–ª–æ—Ä—É—Å—Å–∫–∏–π	be	\n–Ω–æ—Ä–≤–µ–∂—Å–∫–∏–π	no\n\
                    –±–µ–Ω–≥–∞–ª—å—Å–∫–∏–π	bn	\n–ø–∞–Ω–¥–∂–∞–±–∏	pa\n\
                    –±–∏—Ä–º–∞–Ω—Å–∫–∏–π	my	\n–ø–∞–ø—å—è–º–µ–Ω—Ç–æ	pap\n\
                    –±–æ–ª–≥–∞—Ä—Å–∫–∏–π	bg	\n–ø–µ—Ä—Å–∏–¥—Å–∫–∏–π	fa\n\
                    –±–æ—Å–Ω–∏–π—Å–∫–∏–π	bs	\n–ø–æ–ª—å—Å–∫–∏–π	pl\n\
                    –≤–∞–ª–ª–∏–π—Å–∫–∏–π	cy	\n–ø–æ—Ä—Ç—É–≥–∞–ª—å—Å–∫–∏–π	pt\n\
                    –≤–µ–Ω–≥–µ—Ä—Å–∫–∏–π	hu	\n—Ä—É–º—ã–Ω—Å–∫–∏–π	ro\n\
                    –≤—å–µ—Ç–Ω–∞–º—Å–∫–∏–π	vi	\n—Ä—É—Å—Å–∫–∏–π	ru\n\
                    –≥–∞–∏—Ç—è–Ω—Å–∫–∏–π (–∫—Ä–µ–æ–ª—å—Å–∫–∏–π)	ht	\n—Å–µ–±—É–∞–Ω—Å–∫–∏–π	ceb\n\
                    –≥–∞–ª–∏—Å–∏–π—Å–∫–∏–π	gl	\n—Å–µ—Ä–±—Å–∫–∏–π	sr\n\
                    –≥–æ–ª–ª–∞–Ω–¥—Å–∫–∏–π	nl	\n—Å–∏–Ω–≥–∞–ª—å—Å–∫–∏–π	si\n\
                    –≥–æ—Ä–Ω–æ–º–∞—Ä–∏–π—Å–∫–∏–π	\nmrj	—Å–ª–æ–≤–∞—Ü–∫–∏–π	sk\n\
                    –≥—Ä–µ—á–µ—Å–∫–∏–π	el	\n—Å–ª–æ–≤–µ–Ω—Å–∫–∏–π	sl\n\
                    –≥—Ä—É–∑–∏–Ω—Å–∫–∏–π	ka	\n—Å—É–∞—Ö–∏–ª–∏	sw\n\
                    –≥—É–¥–∂–∞—Ä–∞—Ç–∏	gu	\n—Å—É–Ω–¥–∞–Ω—Å–∫–∏–π	su\n\
                    –¥–∞—Ç—Å–∫–∏–π	da	\n—Ç–∞–¥–∂–∏–∫—Å–∫–∏–π	tg\n\
                    –∏–≤—Ä–∏—Ç	he	\n—Ç–∞–π—Å–∫–∏–π	th\n\
                    –∏–¥–∏—à	yi	\n—Ç–∞–≥–∞–ª—å—Å–∫–∏–π	tl\n\
                    –∏–Ω–¥–æ–Ω–µ–∑–∏–π—Å–∫–∏–π	id	\n—Ç–∞–º–∏–ª—å—Å–∫–∏–π	ta\n\
                    –∏—Ä–ª–∞–Ω–¥—Å–∫–∏–π	ga	\n—Ç–∞—Ç–∞—Ä—Å–∫–∏–π	tt\n\
                    –∏—Ç–∞–ª—å—è–Ω—Å–∫–∏–π	it	\n—Ç–µ–ª—É–≥—É	te\n\
                    –∏—Å–ª–∞–Ω–¥—Å–∫–∏–π	is	\n—Ç—É—Ä–µ—Ü–∫–∏–π	tr\n\
                    –∏—Å–ø–∞–Ω—Å–∫–∏–π	es	\n—É–¥–º—É—Ä—Ç—Å–∫–∏–π	udm\n\
                    –∫–∞–∑–∞—Ö—Å–∫–∏–π	kk	\n—É–∑–±–µ–∫—Å–∫–∏–π	uz\n\
                    –∫–∞–Ω–Ω–∞–¥–∞	kn	\n—É–∫—Ä–∞–∏–Ω—Å–∫–∏–π	uk\n\
                    –∫–∞—Ç–∞–ª–∞–Ω—Å–∫–∏–π	ca	\n—É—Ä–¥—É	ur\n\
                    –∫–∏—Ä–≥–∏–∑—Å–∫–∏–π	ky	\n—Ñ–∏–Ω—Å–∫–∏–π	fi\n\
                    –∫–∏—Ç–∞–π—Å–∫–∏–π	zh	\n—Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π	fr\n\
                    –∫–æ—Ä–µ–π—Å–∫–∏–π	ko	\n—Ö–∏–Ω–¥–∏	hi\n\
                    –∫–æ—Å–∞	xh	\n—Ö–æ—Ä–≤–∞—Ç—Å–∫–∏–π	hr\n\
                    –∫—Ö–º–µ—Ä—Å–∫–∏–π	km	\n—á–µ—à—Å–∫–∏–π	cs\n\
                    –ª–∞–æ—Å—Å–∫–∏–π	lo	\n—à–≤–µ–¥—Å–∫–∏–π	sv\n\
                    –ª–∞—Ç—ã–Ω—å	la	\n—à–æ—Ç–ª–∞–Ω–¥—Å–∫–∏–π	gd\n\
                    –ª–∞—Ç—ã—à—Å–∫–∏–π	lv	\n—ç—Å—Ç–æ–Ω—Å–∫–∏–π	et\n\
                    –ª–∏—Ç–æ–≤—Å–∫–∏–π	lt	\n—ç—Å–ø–µ—Ä–∞–Ω—Ç–æ	eo\n\
                    –ª—é–∫—Å–µ–º–±—É—Ä–≥—Å–∫–∏–π	lb	\n—è–≤–∞–Ω—Å–∫–∏–π	jv\n\
                    –º–∞–ª–∞–≥–∞—Å–∏–π—Å–∫–∏–π	mg	\n—è–ø–æ–Ω—Å–∫–∏–π	ja\n\
                    –º–∞–ª–∞–π—Å–∫–∏–π	ms'''
        elif body.lower().split()[0] == '—Å–∫–∞–∂–∏':
            speech_it(' '.join(body.lower().split()[1:]))
            return "file audio"

        elif body.lower().split()[0] == '–≥—Ä–∞—Ñ':
            if body.lower().split()[1] == '—Ä–∞–Ω–¥–æ–º':
                nums = random.choice(range(1, 15))
                points = [i for i in range(nums)]
                comps = random.choice(range(nums, nums + 5))
                cord = [list(set([random.choice(points) for i in range(random.choice(range(1, 5)))]))
                        for i in range(nums)]
            else:
                cord = json.loads(body.lower().split()[1:])
            graph(cord)
            return 'file image|'+str(cord)

        if self.status == 'Admin':
            if body.lower().split()[0] == '–ø–æ–ª—É—á–∏—Ç—å':
                if body.lower().split()[1].isdigit:
                    self.data['player']['money'] += int(body.lower().split()[1])
                    return '–ì–æ—Ç–æ–≤–æ. \n–ë–∞–ª–∞–Ω—Å:üí∞'+self.split_it(self.data['player']['money'])+'$'


    def save(self):
        self.data['player']['money'] = int(round(self.data['player']['money'], 0))
        file = open('../WebServer/databases/player/set_' + str(self.user[0]) + '.json', mode='w')
        json.dump(self.data, file)
        file.close()

    def split_it(self, n):
        n = str(n)
        n = n[::-1]
        temp = ''
        for i in range(len(n)):
            if i%3 == 0 and i != 0:
                temp+='.'
            temp += n[i]
        return temp[::-1]